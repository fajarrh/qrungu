<?php

namespace common\models;

use common\components\TimeAgo;
use DateTime;
use Yii;
use yii\helpers\Url;

/**
 * This is the model class for table "stories".
 *
 * @property int $story_id
 * @property int $user_id
 * @property string $time
 * @property string $latitude
 * @property string $longitude
 * @property int $status
 * @property string $file_name
 * @property integer $duration
 *
 * @property Conversation[] $conversations
 * @property Notification[] $notifications
 * @property Report[] $reports
 * @property Skip[] $skips
 * @property User $user
 * @property integer $view
 * @property integer $reply
 * @property integer $skip
 * @property integer $is_delete
 * @property integer size
 */
class Stories extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public $name, $audio, $distance;
    
    public static function tableName()
    {
        return 'stories';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['latitude', 'longitude', 'duration'], 'required'],
            [['user_id', 'status', 'duration', 'size'], 'integer'],
	        [['status', 'is_delete'], 'in', 'range' => [0,1]],
	        ['user_id', 'default', 'value' => \Yii::$app->user->id],
            [['time'], 'safe'],
            [['latitude', 'longitude'], 'number'],
            [['audio'], 'file', 'skipOnEmpty' => false],
            [['file_name'], 'string', 'max' => 128],
	        ['audio_file', 'string'],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'story_id' => Yii::t('app', 'Story ID'),
            'user_id' => Yii::t('app', 'User ID'),
            'time' => Yii::t('app', 'Time'),
            'latitude' => Yii::t('app', 'Latitude'),
            'longitude' => Yii::t('app', 'Longitude'),
            'status' => Yii::t('app', 'Status'),
            'file_name' => Yii::t('app', 'File Name'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getConversations()
    {
        return $this->hasMany(Conversation::className(), ['story_id' => 'story_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getNotifications()
    {
        return $this->hasMany(Notification::className(), ['story_id' => 'story_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getReports()
    {
        return $this->hasMany(Report::className(), ['story_id' => 'story_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSkips()
    {
        return $this->hasMany(Skip::className(), ['story_id' => 'story_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public function afterFind ()
    {
    	//$this->time = Yii::$app->formatter->asDate ($this->time, 'php:d-m-Y H:i:s');
	    parent::afterFind (); // TODO: Change the autogenerated stub
    }

	/**
     * {@inheritdoc}
     * @return StoriesQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new StoriesQuery(get_called_class());
    }

    public function fields()
    {
	    return [
		    'story_id',
		    'user' => function($model){
	    	    return $model->user->toArray(['display_name', 'image', 'gender', 'age', 'bio']);
		    },
		    'image' => function($model) {
		    	return $model->user->image;
		    },
		    'latitude',
		    'longitude',
		    'audio' => 'audio_file',
		    'duration' => function($model){
			    return sprintf("%'.02d", (int) $model->duration);
		    },
		    'status',
		    'distance' => function ( $model ) {
	    	$distance = round( $model->distance );
	    	    return $distance < 1 ? 'kurang dari 1 km' : $distance . ' km' ;
		    } ,
		    'reply_status' => function ($model){
			    return $model->user_id == Yii::$app->user->id ? false : true;
		    },
		    'date' =>  'time',
		    'time_ago' => function ( $model ) {
			    return Yii::$app->timeAgo->timeAgo($model->time);
		    } ,
	    ];
    }

    public function extraFields ()
    {
	    return [
	    	'is_me' => function($model){
	    	return Yii::$app->user->id == $model->user_id ? true : false;
		    },
		    'skip' => function($model){
	    	    return (int) count($model->skips);
		    },
		    'reply' => function($model){
			    return (int) count($model->conversations);
		    },
		    'view' => function($model){
	    	    $skip = count($model->skips);
	    	    $reply = count ($model->conversations);
			    return (int) ($skip+$reply);
		    },
		    'isExpired' => function($model){
	    	    $h = round((time() - strtotime ($model->time))/3600, 0, PHP_ROUND_HALF_EVEN);
	    	    return $h > 24;
		    }
	    ];
    }

}